-- Step 1: Create the saved_products table.
-- This table will store a many-to-many relationship between users and products.

create table public.saved_products (
  id bigint generated by default as identity primary key,
  user_id uuid not null references public.profiles(id) on delete cascade,
  product_id uuid not null references public.products(id) on delete cascade,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,

  -- Add a unique constraint to prevent a user from saving the same product multiple times.
  constraint saved_products_user_id_product_id_key unique (user_id, product_id)
);

-- Step 2: Enable Row Level Security (RLS) for the new table.
-- This is crucial to ensure users can only access their own saved items.

alter table public.saved_products enable row level security;

-- Step 3: Create RLS policies.
-- Policy 1: Allow users to select (read) their own saved products.
create policy "Users can view their own saved products"
on public.saved_products for select
using (auth.uid() = user_id);

-- Policy 2: Allow users to insert (create) saved products for themselves.
create policy "Users can save products for themselves"
on public.saved_products for insert
with check (auth.uid() = user_id);

-- Policy 3: Allow users to delete their own saved products.
create policy "Users can delete their own saved products"
on public.saved_products for delete
using (auth.uid() = user_id);